没有时间犹豫了：无线业务、大前端代码、各种扩展、Unix编程、网络开发；

几种高效提高技术能力的方法：
1、ya*系列源码、对照C unix php扩展、对照php源代码，写demo理解每一个语法和程序设计思路，51CTO上面纪录关键点，代码提交Github。
2、

需要反复翻阅的书籍 VS 看一遍就可以学会的技巧类书籍
C Unix dragonbook ETC  vs  各种





如何快速有效地学习？
1、一段时间内专注在一个题目，结束前思路不要离开这个领域，要一直琢磨。
2、把这个领域／相关领域 的基础和难点都摸清，用代码实现并验证。
3、如琢如磨，活在当下，假设，想象，决不退让。

没有人是看一眼就都明白，都是要不断琢磨，不断顺着线索追溯，线索错了就再找一条。

不是要全部知识都掌握了才可以写，可以一边做一边测试一边学习一边完善重构。

写代码时，脑子里面是要经常从整体上看当前的段落，看是否有冲突，你要清楚变量在何时、何地、何因变化了，
是否有多线程并发冲突，是否有边界问题。
<C语言常见错误> －－－文库



1、CMS二次开发：webkit封装 和 二次开发接口对外开放。
2、前端开发。
3、高雅的音乐、历史、书法等。

内功者，即是洞察问题根源的能力也。
对一门功夫有较深理解之后，你就会积累一定的Common Sense，其他功夫就不需要你眉毛胡子一把抓了。


